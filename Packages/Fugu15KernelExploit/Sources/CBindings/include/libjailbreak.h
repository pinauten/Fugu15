#include <dlfcn.h>
extern NSString *prebootPath(NSString *path);
extern void *loadLibJailbreak(void);

__attribute__((unused))
static void jbdGetStatus(uint64_t *PPLRWStatus, uint64_t *kcallStatus, pid_t *pid)
{
	static void (*impl_jbdGetStatus)(uint64_t *, uint64_t *, pid_t *) = NULL;
	if (!impl_jbdGetStatus) {
		impl_jbdGetStatus = (void (*)(uint64_t *, uint64_t *, pid_t *))dlsym(loadLibJailbreak(), "jbdGetStatus");
	}
	if (impl_jbdGetStatus) {
		impl_jbdGetStatus(PPLRWStatus, kcallStatus, pid);
	}
}

__attribute__((unused))
static void jbdTransferPPLRW(void)
{
	static void (*impl_jbdTransferPPLRW)(void) = NULL;
	if (!impl_jbdTransferPPLRW) {
		impl_jbdTransferPPLRW = (void (*)(void))dlsym(loadLibJailbreak(), "jbdTransferPPLRW");
	}
	if (impl_jbdTransferPPLRW) {
		impl_jbdTransferPPLRW();
	}
}

__attribute__((unused))
static uint64_t jbdTransferKcall(void)
{
	static uint64_t (*impl_jbdTransferKcall)(void) = NULL;
	if (!impl_jbdTransferKcall) {
		impl_jbdTransferKcall = (uint64_t (*)(void))dlsym(loadLibJailbreak(), "jbdTransferKcall");
	}
	if (impl_jbdTransferKcall) {
		return impl_jbdTransferKcall();
	}
	return -100;
}

__attribute__((unused))
static void jbdFinalizeKcall(void)
{
	static void (*impl_jbdFinalizeKcall)(void) = NULL;
	if (!impl_jbdFinalizeKcall) {
		impl_jbdFinalizeKcall = (void (*)(void))dlsym(loadLibJailbreak(), "jbdFinalizeKcall");
	}
	if (impl_jbdFinalizeKcall) {
		impl_jbdFinalizeKcall();
	}
}

__attribute__((unused))
static int64_t jbdInitEnvironment(void)
{
	static int64_t (*impl_jbdInitEnvironment)(void) = NULL;
	if (!impl_jbdInitEnvironment) {
		impl_jbdInitEnvironment = (int64_t (*)(void))dlsym(loadLibJailbreak(), "jbdInitEnvironment");
	}
	if (impl_jbdInitEnvironment) {
		return impl_jbdInitEnvironment();
	}
	return -100;
}

__attribute__((unused))
static int64_t jbdRebuildTrustCache(void)
{
	static int64_t (*impl_jbdRebuildTrustCache)(void) = NULL;
	if (!impl_jbdRebuildTrustCache) {
		impl_jbdRebuildTrustCache = (int64_t (*)(void))dlsym(loadLibJailbreak(), "jbdRebuildTrustCache");
	}
	if (impl_jbdRebuildTrustCache) {
		return impl_jbdRebuildTrustCache();
	}
	return -100;
}

__attribute__((unused))
static int64_t jbdSetFakelibVisible(bool active)
{
	static int64_t (*impl_jbdSetFakelibVisible)(bool) = NULL;
	if (!impl_jbdSetFakelibVisible) {
		impl_jbdSetFakelibVisible = (int64_t (*)(bool))dlsym(loadLibJailbreak(), "jbdSetFakelibVisible");
	}
	if (impl_jbdSetFakelibVisible) {
		return impl_jbdSetFakelibVisible(active);
	}
	return -100;
}

__attribute__((unused))
int64_t jbdUpdateFromTIPA(NSString *pathToTIPA, bool rebootWhenDone)
{
	static int64_t (*impl_jbdUpdateFromTIPA)(NSString *, bool) = NULL;
	if (!impl_jbdUpdateFromTIPA) {
		impl_jbdUpdateFromTIPA = (int64_t (*)(NSString *, bool))dlsym(loadLibJailbreak(), "jbdUpdateFromTIPA");
	}
	if (impl_jbdUpdateFromTIPA) {
		return impl_jbdUpdateFromTIPA(pathToTIPA, rebootWhenDone);
	}
	return -100;
}

__attribute__((unused))
int64_t jbdUpdateFromBasebinTar(NSString *pathToBasebinTar, bool rebootWhenDone)
{
	static int64_t (*impl_jbdUpdateFromBasebinTar)(NSString *, bool) = NULL;
	if (!impl_jbdUpdateFromBasebinTar) {
		impl_jbdUpdateFromBasebinTar = (int64_t (*)(NSString *, bool))dlsym(loadLibJailbreak(), "jbdUpdateFromBasebinTar");
	}
	if (impl_jbdUpdateFromBasebinTar) {
		return impl_jbdUpdateFromBasebinTar(pathToBasebinTar, rebootWhenDone);
	}
	return -100;
}

__attribute__((unused))
void patchBaseBinLaunchDaemonPlists(void)
{
	static void (*impl_patchBaseBinLaunchDaemonPlists)(void) = NULL;
	if (!impl_patchBaseBinLaunchDaemonPlists) {
		impl_patchBaseBinLaunchDaemonPlists = (void (*)(void))dlsym(loadLibJailbreak(), "patchBaseBinLaunchDaemonPlists");
	}
	if (impl_patchBaseBinLaunchDaemonPlists) {
		impl_patchBaseBinLaunchDaemonPlists();
	}
}